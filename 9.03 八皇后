//注意剪枝手法：对角线元素相同位置
#include<iostream>
#include<cstdio>
#include<vector>
#include<algorithm>
#include<string>
#include<cmath>
#include<stdlib.h>
using namespace std;
int p[9];//用来存放每一行的列数，从1开始
vector<int> vi;
bool hashtable[9];//用来标记列是否放入 
void generatep(int row){//从第index行开始填入 
    if(row == 9){//表示找到一个结果，将其转化为整数存入vi
        int sum = 0;
        for(int i = 1; i <= 8; i++){
            sum += p[i] * pow(10, 8 - i);
        }
        vi.push_back(sum);
        return;
    }
     
    for(int x = 1; x <= 8; x++){//遍历第x列 
        if(hashtable[x] == false){
            bool flag = true;
            /*for循环用来剪枝*/ 
            for(int pre = 1; pre < row; pre++){//遍历之前填入的结点
            //x为index的列，p[pre]为pre的列 
                if(abs(row - pre) == abs(x - p[pre])){//对角线上的结点相同 
                    flag = false;
                    break;
                }
            }
            if(flag){//可以填入，直接向下填入，递归访问 
                p[row] = x;
                hashtable[x] = true;
                generatep(row+1);
                hashtable[x] = false;//回溯还原 
            }
        }
    }
}
int main(){
    int b;//根本就没有case个数的输入 
    while(cin >> b){
        generatep(1); 
        sort(vi.begin(), vi.end());
        cout << vi[b - 1]<< endl;
    }
    return 0;
}
